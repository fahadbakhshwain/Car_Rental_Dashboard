name: Run Daily Forecasting Pipeline

on:
  workflow_dispatch: # يسمح بالتشغيل اليدوي من تبويب Actions في GitHub
  schedule:
    # يشغل في الساعة 01:00 بالتوقيت العالمي الموحد (UTC) كل يوم
    # يمكن تعديل التوقيت: مثلاً '0 3 * * *' لتشغيله الساعة 3:00 صباحاً بتوقيت UTC
    - cron: '0 1 * * *'

jobs:
  forecast:
    runs-on: ubuntu-latest # تشغيل على أحدث نسخة من نظام تشغيل أوبونتو (Linux)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3 # يسحب الكود من مستودع GitHub

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # استخدم نفس إصدار بايثون الذي تستخدمه لمشروعك (مثلاً 3.9)

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt # تثبيت المكتبات من requirements.txt

    - name: Run the daily forecast pipeline
      # هذا الجزء يقوم بتشغيل السكريبت الذي يحدّث ملف CSV
      run: python daily_forecast_pipeline.py # تشغيل سكريبت البايثون الخاص بك

    - name: Commit and Push new data
      # هذا الجزء يقوم بحفظ التغييرات في ملف CSV ورفعها إلى GitHub
      run: |
        git config user.name "GitHub Actions" # إعداد اسم المستخدم لـ Git (للقيام بالـ commit الآلي)
        git config user.email "actions@github.com" # إعداد بريد المستخدم لـ Git
        git add data/demand_forecasts_sample.csv # إضافة ملف البيانات المحدث (الذي عدّله السكريبت)
        git commit -m "Automated: Update daily demand forecast data" || echo "No changes to commit" # حفظ التغييرات (إذا كان هناك تغيير)
        git push origin main # رفع التغييرات إلى GitHub (هذا حاسم لتحديث الداشبورد)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # استخدام توكن GitHub للوصول